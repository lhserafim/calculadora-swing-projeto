1. Java Swing
    1.1. O Swing é um framework que disponibiliza um conjunto de elementos gráficos para ser utilizado na
         plataforma Java
    1.2. Os principais componentes do Swing são resumidos abaixo:
         (https://www.devmedia.com.br/java-swing-conheca-os-componentes-jtextfield-e-jformattedtextfield/30981)
        1.2.1. JFrame representa a janela do programa com barra de título, ícone, botões de comando, etc.
               Entre os principais métodos temos o pack() que compacta a janela para o tamanho dos componentes,
               setSize(int, int) que define a largura e altura da janela, setLocation(int, int) que define a posição
               da janela na tela (x,y), setBounds(int, int, int, int) que define posição e tamanho, setVisible(boolean)
               que exibe a janela e setDefaultCloseOperation(int) que define o que ocorre quando o usuário tenta fechar
               a janela (as opções são: DO_NOTHING_ON_CLOSE, HIDE_ON_CLOSE, DISPOSE_ON_CLOSE, EXIT_ON_CLOSE).
        1.2.2. JPanel representa um tipo básico de container para inserção de componentes. Entre os principais métodos
               temos add(Component, int) que adiciona o componente definindo sua posição e setLayout(LayoutManagaer)
               que altera o tipo de layout.
        1.2.3. JLabel representa um rótulo de texto. Entre os principais métodos temos o setText(String) que altera o
               texto e getText() que retorna o texto atual.
        1.2.4. JTextField representa um campo de texto onde o usuário pode informar um texto em uma linha. Entre os
               principais métodos temos setText(String) que altera o texto e getText() que retorna o texto atual.
        1.2.5. JPasswordField representa um campo de texto protegido, subclasse de JTextField. O principal método é o
               setEchoChar(char) que define o caractere que aparece ao digitar um texto.
        1.2.6. JTextArea representa uma caixa onde o usuário pode informar várias linhas de texto. Entre os principais
               métodos temos o setText(String) que altera o texto, getText() que retorna o texto atual,
               getSelectedText() que retorna o texto selecionado pelo usuário e insert(String, int) que insere um texto
               na posição especificada.
        1.2.7. JCheckBox representa uma caixa de seleção e permite selecionar ou não uma opção. Entre os principais
               métodos temos o setSelected(boolean) que altera o estado da caixa de seleção e o método isSelected()
               que retorna true se a caixa estiver marcada e false se não estiver marcada.
        1.2.8. JRadioButton representa um componente que permite seleciona uma entre diversas opções. O JRadioButton é
               semelhante ao JCheckBox, inclusive com os mesmos construtores e métodos.
        1.2.9. JComboBox representa uma caixa de combinação, da qual o usuário pode selecionar uma opção. Entre os
               principais métodos temos o addItem(Object) que adiciona um item à lista de opções, setEditable(boolean)
               que permite ao usuário digitar uma opção, getSelectedIndex() que retorna a posição do item atualmente
               selecionado, getSelectedItem() que retorna o texto do item atualmente selecionado, setSelectedIndex(int)
               que seleciona o item da posição especificada e setSelectedIndex(Object) que seleciona o objeto
               especificado na lista.
        1.2.10.JList representa uma lista de opções que permite a seleção de mais de um item simultaneamente. Entre os
               principais métodos temos o setListData(Object[]) que preenche ou altera os itens de uma lista,
               getSelectedValues() que retorna um array de objetos contendo itens selecionados na lista.
        1.2.11.JButton representa um botão destinado a executar uma ação. Entre os principais métodos temos o
               setText(String) que altera o texto do botão e setIcon(Icon) que altera o ícone do botão.

